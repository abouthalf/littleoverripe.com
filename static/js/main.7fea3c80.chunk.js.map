{"version":3,"sources":["layers/backgrounds/avocados.png","layers/backgrounds/shadows.png","layers/backgrounds/pits.png","layers/backgrounds/pits2.png","layers/backgrounds/pits3.png","layers/backgrounds/sketch.png","layers/backgrounds/palette.png","layers/Layer.js","layers/const.js","layers/Avocados.js","layers/ShadowAvocados.js","layers/Pits.js","layers/Sketch.js","layers/Palatte.js","Painting.js","registerServiceWorker.js","index.js"],"names":["module","exports","Layer","c","classnames","this","props","className","transition","styles","backgroundImage","image","backgroundPosition","mixBlendMode","blend","backgroundBlendMode","animationDuration","hidden","hide","style","data-depth","depth","onAnimationIteration","handleAnimationIteration","onAnimationStart","handleAnimationStart","children","Component","defaultProps","Avocados","ShadowAvocados","Pit","pit","Pit2","pit2","Pit3","pit3","Sketch","Palette","Painting","parallax","Parallax","scene","disable","ref","el","data-relative-input","data-clip-relative-input","data-hover-only","data-selector","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7fea3c80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avocados.8288952b.png\";","module.exports = __webpack_public_path__ + \"static/media/shadows.31ae48c3.png\";","module.exports = __webpack_public_path__ + \"static/media/pits.44e8f9cc.png\";","module.exports = __webpack_public_path__ + \"static/media/pits2.e5ce585b.png\";","module.exports = __webpack_public_path__ + \"static/media/pits3.3ac7898c.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch.e4e8056b.png\";","module.exports = __webpack_public_path__ + \"static/media/palette.03943a12.png\";","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport './Layer.css';\nimport {duration} from './const';\n\nexport default class Layer extends Component \n{\n    render() {\n        let c = classnames('Layer', this.props.className, this.props.transition);\n        let styles = {\n            backgroundImage: `url(${this.props.image})`,\n            backgroundPosition: this.props.backgroundPosition,\n            mixBlendMode: this.props.blend,\n            backgroundBlendMode: this.props.blend,\n            animationDuration: `${duration}s`\n        };\n        return <div className={c} \n                hidden={this.props.hide}\n                style={styles}\n                data-depth={this.props.depth}\n                onAnimationIteration={this.props.handleAnimationIteration}\n                onAnimationStart={this.props.handleAnimationStart}>\n            {this.props.children}\n        </div>\n    }\n}\n\nLayer.defaultProps = {\n    className: '',\n    depth: '0.00',\n    image: '//0',\n    hide: false,\n    transition: '',\n    blend: 'normal',\n    backgroundPosition: 'center center',\n    handleAnimationIteration: function(){},\n    handleAnimationStart: function() {}\n}","\nexport const duration = 4; // in seconds","import React from 'react';\nimport image from './backgrounds/avocados.png';\nimport Layer from './Layer';\nimport './Avocados.css';\n\nconst Avocados = ({hide, depth}) => {\n    return <Layer className=\"Avocados\" depth={depth}>\n        <Layer className=\"AvocadosImage\" image={image} transition=\"breath\" />\n    </Layer>\n}\n\nexport default Avocados;","import React from 'react';\nimport image from './backgrounds/shadows.png';\nimport Layer from './Layer';\nimport './ShadowAvocados.css';\n\nconst ShadowAvocados = ({hide, depth}) => {\n    return <Layer className=\"ShadowAvocados\" image={image} depth={depth} blend=\"multiply\" />\n}\n\nexport default ShadowAvocados;","import React from 'react';\nimport pit from './backgrounds/pits.png';\nimport pit2 from './backgrounds/pits2.png';\nimport pit3 from './backgrounds/pits3.png';\nimport Layer from './Layer';\n\nexport const Pit = ({hide, depth}) => {\n    return <Layer className=\"Pit1\" image={pit} depth={depth} blend=\"multiply\" />\n}\n\nexport const Pit2 = ({hide, depth}) => {\n    return <Layer className=\"Pit2\" image={pit2} depth={depth} blend=\"normal\" />\n}\n\nexport const Pit3 = ({hide, depth}) => {\n    return <Layer className=\"Pit3\" image={pit3} depth={depth} blend=\"screen\" />\n}\n\n","import React from 'react';\nimport Layer from './Layer';\nimport image from './backgrounds/sketch.png';\nimport './Sketch.css';\n\nconst Sketch = ({hide, depth}) => {\n    return <Layer className=\"Sketch\" image={image} depth={depth} blend=\"color-burn\" backgroundPosition=\"right center\" />\n}\n\nexport default Sketch;","import React from 'react';\nimport Layer from './Layer';\nimport image from './backgrounds/palette.png';\nimport './Palette.css';\n\nconst Palette = ({hide, depth}) => {\n    return <Layer className=\"Palette\" image={image} depth={depth} backgroundPosition=\"left center\" />\n}\n\nexport default Palette;","import React, { Component } from 'react';\nimport Parallax from 'parallax-js' \nimport './Painting.css';\n\n// Layers\nimport Avocados from './layers/Avocados';\nimport ShadowAvocados from './layers/ShadowAvocados';\nimport {Pit, Pit2, Pit3} from './layers/Pits';\nimport Sketch from './layers/Sketch';\nimport Palette from './layers/Palatte';\n\nclass Painting extends Component {\n  componentDidMount() {\n    this.parallax = new Parallax(this.scene)\n  }\n\n  componentWillUnmount() {\n    this.parallax.disable()\n  }\n\n  render() {\n    return (\n      <div ref={el => this.scene = el} \n          className=\"Painting\"\n          data-relative-input=\"true\" \n          data-clip-relative-input=\"false\"\n          data-hover-only=\"true\"\n          data-selector=\".Layer\">\n          <Pit depth=\"0.1\" />\n          <Pit2 depth=\"0.15\" />\n          <Pit3 depth=\"0.20\"/>\n          <ShadowAvocados depth=\"0.35\" />\n          <Avocados depth=\"0.45\" />\n          <Sketch depth=\"0.35\" />\n          <Palette depth=\"0.35\" />\n      </div>\n    );\n  }\n}\n\nexport default Painting;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Painting from './Painting';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<Painting />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}